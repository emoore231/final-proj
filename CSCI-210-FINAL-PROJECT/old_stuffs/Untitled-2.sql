const std::string Queries::INDEX_PRODUCT = 
R"(
CREATE INDEX IF NOT EXISTS idx_PRODUCT_ACQUISITION_CONTRACT_ID ON PRODUCT (ACQUISITION_CONTRACT_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_SALES_CONTRACT_ID ON PRODUCT (SALES_CONTRACT_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_TRANSFER_ID ON PRODUCT (TRANSFER_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_WAREHOUSE_ID ON PRODUCT (WAREHOUSE_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_PRODUCT_TYPE_ID ON PRODUCT (PRODUCT_TYPE_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_SERIAL_NUMBER ON PRODUCT (SERIAL_NUMBER);
)";

const std::string Queries::INDEX_PRODUCT_TYPE = 
R"(
CREATE INDEX IF NOT EXISTS idx_PRODUCT_TYPE_MANUFACTURER_ID ON PRODUCT_TYPE (MANUFACTURER_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_TYPE_NAME ON PRODUCT_TYPE (NAME);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_TYPE_DESCRIPTION ON PRODUCT_TYPE (DESCRIPTION);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_TYPE_DEMAND_INDEX ON PRODUCT_TYPE (DEMAND_INDEX);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_TYPE_PRODUCT_CATEGORY_ID ON PRODUCT_TYPE (PRODUCT_CATEGORY_ID);
)";

const std::string Queries::INDEX_PRODUCT_CATEGORY = 
R"(
CREATE INDEX IF NOT EXISTS idx_PRODUCT_CATEGORY_NAME ON PRODUCT_CATEGORY (NAME);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_CATEGORY_DESCRIPTION ON PRODUCT_CATEGORY (DESCRIPTION);
)";

const std::string Queries::INDEX_REGULATION = 
R"(
CREATE INDEX IF NOT EXISTS idx_REGULATION_JURISDICTION_ID ON REGULATION (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_REGULATION_LEGAL_CODE ON REGULATION (LEGAL_CODE);
CREATE INDEX IF NOT EXISTS idx_REGULATION_AUTHORING_BODY ON REGULATION (AUTHORING_BODY);
)";

const std::string Queries::INDEX_SALES_CONTRACT = 
R"(
CREATE INDEX IF NOT EXISTS idx_SALES_CONTRACT_PURCHASER_ID ON SALES_CONTRACT (PURCHASER_ID);
CREATE INDEX IF NOT EXISTS idx_SALES_CONTRACT_JURISDICTION_ID ON SALES_CONTRACT (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_SALES_CONTRACT_NEGOTIATOR_ID ON SALES_CONTRACT (NEGOTIATOR_ID);
CREATE INDEX IF NOT EXISTS idx_SALES_CONTRACT_MANAGER_ID ON SALES_CONTRACT (MANAGER_ID);
CREATE INDEX IF NOT EXISTS idx_SALES_CONTRACT_GRAND_TOTAL ON SALES_CONTRACT (GRAND_TOTAL);
CREATE INDEX IF NOT EXISTS idx_SALES_CONTRACT_DATE ON SALES_CONTRACT (DATE);
)";

const std::string Queries::INDEX_ACQUISITION_CONTRACT = 
R"(
CREATE INDEX IF NOT EXISTS idx_ACQUISITION_CONTRACT_SELLER_ID ON ACQUISITION_CONTRACT (SELLER_ID);
CREATE INDEX IF NOT EXISTS idx_ACQUISITION_CONTRACT_JURISDICTION_ID ON ACQUISITION_CONTRACT (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_ACQUISITION_CONTRACT_NEGOTIATOR_ID ON ACQUISITION_CONTRACT (NEGOTIATOR_ID);
CREATE INDEX IF NOT EXISTS idx_ACQUISITION_CONTRACT_MANAGER_ID ON ACQUISITION_CONTRACT (MANAGER_ID);
CREATE INDEX IF NOT EXISTS idx_ACQUISITION_CONTRACT_GRAND_TOTAL ON ACQUISITION_CONTRACT (GRAND_TOTAL);
CREATE INDEX IF NOT EXISTS idx_ACQUISITION_CONTRACT_DATE ON ACQUISITION_CONTRACT (DATE);
)";

const std::string Queries::INDEX_TRANSFER = 
R"(
CREATE INDEX IF NOT EXISTS idx_TRANSFER_ORIGIN_ID ON TRANSFER (ORIGIN_ID);
CREATE INDEX IF NOT EXISTS idx_TRANSFER_DESTINATION_ID ON TRANSFER (DESTINATION_ID);
CREATE INDEX IF NOT EXISTS idx_TRANSFER_DATE ON TRANSFER (DATE);
CREATE INDEX IF NOT EXISTS idx_TRANSFER_MANAGER_ID ON TRANSFER (MANAGER_ID);
)";

const std::string Queries::INDEX_PRODUCT_CAPACITY = 
R"(
CREATE INDEX IF NOT EXISTS idx_PRODUCT_CAPACITY_PRODUCT_TYPE_ID ON PRODUCT_CAPACITY (PRODUCT_TYPE_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_CAPACITY_WAREHOUSE_ID ON PRODUCT_CAPACITY (WAREHOUSE_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_CAPACITY_MAX_CAPACITY ON PRODUCT_CAPACITY (MAX_CAPACITY);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_CAPACITY_RESTRICTIONS ON PRODUCT_CAPACITY (RESTRICTIONS);
)";

const std::string Queries::INDEX_PRODUCT_REGULATION = 
R"(
CREATE INDEX IF NOT EXISTS idx_PRODUCT_REGULATION_PRODUCT_CATEGORY_ID ON PRODUCT_REGULATION (PRODUCT_CATEGORY_ID);
CREATE INDEX IF NOT EXISTS idx_PRODUCT_REGULATION_REGULATION_ID ON PRODUCT_REGULATION (REGULATION_ID);
)";

const std::string Queries::INDEX_PURCHASER = 
R"(
CREATE INDEX IF NOT EXISTS idx_PURCHASER_KIND ON PURCHASER (KIND);
CREATE INDEX IF NOT EXISTS idx_PURCHASER_NAME ON PURCHASER (NAME);
CREATE INDEX IF NOT EXISTS idx_PURCHASER_JURISDICTION_ID ON PURCHASER (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_PURCHASER_TELEPHONE ON PURCHASER (TELEPHONE);
CREATE INDEX IF NOT EXISTS idx_PURCHASER_NRA_NUMBER ON PURCHASER (NRA_NUMBER);
CREATE INDEX IF NOT EXISTS idx_PURCHASER_DLN_NUMBER ON PURCHASER (DLN_NUMBER);
CREATE INDEX IF NOT EXISTS idx_PURCHASER_ATF_NUMBER ON PURCHASER (ATF_NUMBER);
)";

const std::string Queries::INDEX_SELLER = 
R"(
CREATE INDEX IF NOT EXISTS idx_SELLER_JURISDICTION_ID ON SELLER (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_SELLER_NAME ON SELLER (NAME);
CREATE INDEX IF NOT EXISTS idx_SELLER_RELIABILITY ON SELLER (RELIABILITY);
)";

const std::string Queries::INDEX_WAREHOUSE = 
R"(
CREATE INDEX IF NOT EXISTS idx_WAREHOUSE_OFFICE_ID ON WAREHOUSE (OFFICE_ID);
CREATE INDEX IF NOT EXISTS idx_WAREHOUSE_SIZE_TYPE ON WAREHOUSE (SIZE_TYPE);
)";

const std::string Queries::INDEX_MANUFACTURER = 
R"(
CREATE INDEX IF NOT EXISTS idx_MANUFACTURER_NAME ON MANUFACTURER (NAME);
CREATE INDEX IF NOT EXISTS idx_MANUFACTURER_RELIABILITY_INDEX ON MANUFACTURER (RELIABILITY_INDEX);
CREATE INDEX IF NOT EXISTS idx_MANUFACTURER_NEGOTIATOR_ID ON MANUFACTURER (NEGOTIATOR_ID);
)";

const std::string Queries::INDEX_LOCATION = 
R"(
CREATE INDEX IF NOT EXISTS idx_LOCATION_ADDRESS_LINE_1 ON LOCATION (ADDRESS_LINE_1);
CREATE INDEX IF NOT EXISTS idx_LOCATION_ADDRESS_LINE_2 ON LOCATION (ADDRESS_LINE_2);
CREATE INDEX IF NOT EXISTS idx_LOCATION_STATE ON LOCATION (STATE);
CREATE INDEX IF NOT EXISTS idx_LOCATION_COUNTY ON LOCATION (COUNTY);
CREATE INDEX IF NOT EXISTS idx_LOCATION_ZIP_CODE ON LOCATION (ZIP_CODE);
)";

const std::string Queries::INDEX_OFFICE = 
R"(
CREATE INDEX IF NOT EXISTS idx_OFFICE_LOCATION_ID ON OFFICE (LOCATION_ID);
CREATE INDEX IF NOT EXISTS idx_OFFICE_JURISDICTION_ID ON OFFICE (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_OFFICE_OVERSEER_ID ON OFFICE (OVERSEER_ID);
CREATE INDEX IF NOT EXISTS idx_OFFICE_KIND ON OFFICE (KIND);
)";

const std::string Queries::INDEX_JURISDICTION = 
R"(
CREATE INDEX IF NOT EXISTS idx_JURISDICTION_STATE ON JURISDICTION (STATE);
CREATE INDEX IF NOT EXISTS idx_JURISDICTION_COUNTY ON JURISDICTION (COUNTY);
CREATE INDEX IF NOT EXISTS idx_JURISDICTION_CITY ON JURISDICTION (CITY);
)";

const std::string Queries::INDEX_NEGOTIATOR = 
R"(
CREATE INDEX IF NOT EXISTS idx_NEGOTIATOR_EMPLOYEE_ID ON NEGOTIATOR (EMPLOYEE_ID);
CREATE INDEX IF NOT EXISTS idx_NEGOTIATOR_FAVORABILITY ON NEGOTIATOR (FAVORABILITY);
CREATE INDEX IF NOT EXISTS idx_NEGOTIATOR_NOTES ON NEGOTIATOR (NOTES);
)";

const std::string Queries::INDEX_MANAGER = 
R"(
CREATE INDEX IF NOT EXISTS idx_MANAGER_EMPLOYEE_ID ON MANAGER (EMPLOYEE_ID);
CREATE INDEX IF NOT EXISTS idx_MANAGER_AUTHORITY_LEVEL ON MANAGER (AUTHORITY_LEVEL);
CREATE INDEX IF NOT EXISTS idx_MANAGER_NOTES ON MANAGER (NOTES);
)";

const std::string Queries::INDEX_EMPLOYEE = 
R"(
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_NAME ON EMPLOYEE (NAME);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_SSN ON EMPLOYEE (SSN);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_DOB ON EMPLOYEE (DOB);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_OFFICE_ID ON EMPLOYEE (OFFICE_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_SALARY ON EMPLOYEE (SALARY);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_SCHEDULE_ID ON EMPLOYEE (SCHEDULE_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_JOB_POSITION_ID ON EMPLOYEE (JOB_POSITION_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_LOCATION_ID ON EMPLOYEE (LOCATION_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_JURISDICTION_ID ON EMPLOYEE (JURISDICTION_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_MANAGER_ID ON EMPLOYEE (MANAGER_ID);
)";

const std::string Queries::INDEX_SCHEDULE = 
R"(
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_M_START_HOUR ON SCHEDULE (M_START_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_M_END_HOUR ON SCHEDULE (M_END_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_T_START_HOUR ON SCHEDULE (T_START_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_T_END_HOUR ON SCHEDULE (T_END_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_W_START_HOUR ON SCHEDULE (W_START_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_W_END_HOUR ON SCHEDULE (W_END_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_TH_START_HOUR ON SCHEDULE (TH_START_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_TH_END_HOUR ON SCHEDULE (TH_END_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_F_START_HOUR ON SCHEDULE (F_START_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_F_END_HOUR ON SCHEDULE (F_END_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_S_START_HOUR ON SCHEDULE (S_START_HOUR);
CREATE INDEX IF NOT EXISTS idx_SCHEDULE_S_END_HOUR ON SCHEDULE (S_END_HOUR);
)";

const std::string Queries::INDEX_EMPLOYEE_CHANGE = 
R"(
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_CHANGE_EMPLOYEE_ID ON EMPLOYEE_CHANGE (EMPLOYEE_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_CHANGE_MANAGER_ID ON EMPLOYEE_CHANGE (MANAGER_ID);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_CHANGE_DATE ON EMPLOYEE_CHANGE (DATE);
CREATE INDEX IF NOT EXISTS idx_EMPLOYEE_CHANGE_KIND ON EMPLOYEE_CHANGE (KIND);
)";

const std::string Queries::INDEX_JOB_POSITION = 
R"(
CREATE INDEX IF NOT EXISTS idx_JOB_POSITION_NAME ON JOB_POSITION (NAME);
CREATE INDEX IF NOT EXISTS idx_JOB_POSITION_DESCRIPTION ON JOB_POSITION (DESCRIPTION);
)";
